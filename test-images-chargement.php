<?php
/**
 * Test du Chargement des Images FIFA Portal
 */

echo "üîç TEST DU CHARGEMENT DES IMAGES FIFA PORTAL\n";
echo "===========================================\n\n";

$baseUrl = "http://localhost:8001";

// Test 1: V√©rifier la structure HTML des images
echo "1Ô∏è‚É£ V√âRIFICATION DE LA STRUCTURE HTML DES IMAGES\n";
echo "-----------------------------------------------\n";

$testUrl = "$baseUrl/fifa-portal";
echo "üéØ URL test√©e: $testUrl\n";

$response = file_get_contents($testUrl);

if ($response === false) {
    echo "‚ùå Erreur HTTP lors de l'acc√®s\n";
} else {
    echo "‚úÖ Page accessible\n";
    
    // V√©rifier que les √©mojis ont √©t√© supprim√©s
    if (strpos($response, 'üë§') === false && strpos($response, 'üèüÔ∏è') === false && strpos($response, 'üè≥Ô∏è') === false) {
        echo "‚úÖ √âmojis supprim√©s du HTML\n";
    } else {
        echo "‚ùå √âmojis encore pr√©sents dans le HTML\n";
        
        // Identifier o√π sont les √©mojis
        if (strpos($response, 'üë§') !== false) echo "  ‚Ä¢ üë§ trouv√© dans le HTML\n";
        if (strpos($response, 'üèüÔ∏è') !== false) echo "  ‚Ä¢ üèüÔ∏è trouv√© dans le HTML\n";
        if (strpos($response, 'üè≥Ô∏è') !== false) echo "  ‚Ä¢ üè≥Ô∏è trouv√© dans le HTML\n";
    }
    
    // V√©rifier la pr√©sence des balises img
    if (strpos($response, '<img') !== false) {
        echo "‚úÖ Balises HTML <img> pr√©sentes\n";
        
        // Compter et identifier les images
        $imgCount = substr_count($response, '<img');
        echo "üìä Nombre d'images trouv√©es: $imgCount\n";
        
        // Extraire les informations des images
        preg_match_all('/<img[^>]+>/', $response, $matches);
        echo "\nüîç D√©tail des images trouv√©es:\n";
        foreach ($matches[0] as $index => $imgTag) {
            echo "  " . ($index + 1) . ". $imgTag\n";
        }
    } else {
        echo "‚ùå Aucune balise HTML <img> trouv√©e\n";
    }
    
    // V√©rifier les IDs des √©l√©ments d'images
    $imageIds = [
        'hero-player-photo',
        'hero-club-logo',
        'hero-flag'
    ];
    
    echo "\nüîç V√©rification des IDs des √©l√©ments d'images:\n";
    foreach ($imageIds as $id) {
        if (strpos($response, $id) !== false) {
            echo "  ‚úÖ $id: pr√©sent\n";
        } else {
            echo "  ‚ùå $id: NON pr√©sent\n";
        }
    }
    
    // V√©rifier les sources d'images
    $imageSources = [
        'https://cdn.futbin.com' => 'Photos FIFA Futbin',
        'https://www.ea.com/fifa' => 'Photos FIFA EA',
        'https://flagcdn.com' => 'Drapeaux Flag CDN',
        'https://logos-world.net' => 'Logos Clubs'
    ];
    
    echo "\nüîç V√©rification des sources d'images:\n";
    foreach ($imageSources as $url => $description) {
        if (strpos($response, $url) !== false) {
            echo "  ‚úÖ $description: $url\n";
        } else {
            echo "  ‚ùå $description: NON trouv√©\n";
        }
    }
    
    // V√©rifier la gestion d'erreur
    if (strpos($response, 'onerror') !== false) {
        echo "‚úÖ Gestion d'erreur des images (onerror) configur√©e\n";
    } else {
        echo "‚ùå Gestion d'erreur des images NON configur√©e\n";
    }
    
    // V√©rifier les fallbacks
    if (strpos($response, 'data:image/svg+xml;base64') !== false) {
        echo "‚úÖ Fallbacks SVG en base64 configur√©s\n";
    } else {
        echo "‚ùå Fallbacks SVG NON configur√©s\n";
    }
}

echo "\n2Ô∏è‚É£ DIAGNOSTIC DES PROBL√àMES POTENTIELS\n";
echo "----------------------------------------\n";

echo "üîç Probl√®mes identifi√©s:\n";

// V√©rifier si les √©mojis sont encore dans le JavaScript
if (strpos($response, '‚öΩ') !== false || strpos($response, 'üèüÔ∏è') !== false || strpos($response, 'üè≥Ô∏è') !== false) {
    echo "  ‚ùå √âmojis encore pr√©sents dans le JavaScript\n";
} else {
    echo "  ‚úÖ √âmojis supprim√©s du JavaScript\n";
}

// V√©rifier si les fonctions d'images sont bien pr√©sentes
$imageFunctions = [
    'updateHeroImages',
    'updatePlayerPhoto',
    'updateClubLogo',
    'updateNationalityFlag'
];

echo "\nüîç V√©rification des fonctions d'images:\n";
foreach ($imageFunctions as $function) {
    if (strpos($response, $function) !== false) {
        echo "  ‚úÖ $function: pr√©sente\n";
    } else {
        echo "  ‚ùå $function: NON pr√©sente\n";
    }
}

echo "\n3Ô∏è‚É£ RECOMMANDATIONS POUR R√âSOUDRE LE PROBL√àME\n";
echo "-----------------------------------------------\n";

echo "üîß Actions √† effectuer:\n";
echo "1. V√©rifier que le navigateur charge bien les images\n";
echo "2. Ouvrir la console d√©veloppeur (F12) pour voir les erreurs\n";
echo "3. V√©rifier que les URLs d'images sont accessibles\n";
echo "4. Tester avec un joueur sp√©cifique: $testUrl?player_id=8\n";
echo "5. V√©rifier que updateHeroImages() est appel√©e\n";

echo "\nüìä √âtat global des images:\n";
echo "  ‚Ä¢ HTML: " . (strpos($response, '<img') !== false ? "‚úÖ" : "‚ùå") . "\n";
echo "  ‚Ä¢ JavaScript: " . (strpos($response, 'updateHeroImages') !== false ? "‚úÖ" : "‚ùå") . "\n";
echo "  ‚Ä¢ Sources externes: " . (strpos($response, 'https://cdn.futbin.com') !== false ? "‚úÖ" : "‚ùå") . "\n";
echo "  ‚Ä¢ Gestion d'erreur: " . (strpos($response, 'onerror') !== false ? "‚úÖ" : "‚ùå") . "\n";

echo "\n‚úÖ Test de chargement des images termin√© !\n";

