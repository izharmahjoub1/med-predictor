<?php
/**
 * Fix Voice Timeout - Correction du timeout de 2 secondes
 */

echo "=== Fix Voice Timeout - Correction du Timeout de 2 Secondes ===\n\n";

echo "‚è±Ô∏è  **PROBL√àME IDENTIFI√â** :\n";
echo "1. ‚ö†Ô∏è  √âv√©nement onend arr√™te la reconnaissance apr√®s 2 secondes\n";
echo "2. ‚ö†Ô∏è  setTimeout cach√© dans le code\n";
echo "3. ‚ö†Ô∏è  Configuration de reconnaissance incorrecte\n\n";

echo "üéØ **SOLUTION** : Corriger la configuration de reconnaissance vocale\n\n";

// Lire le fichier de vue actuel
$viewFile = 'resources/views/pcma/create.blade.php';
echo "1. Lecture du fichier de vue : $viewFile\n";

if (file_exists($viewFile)) {
    $content = file_get_contents($viewFile);
    $fileSize = strlen($content);
    echo "   ‚úÖ Fichier trouv√© (taille : $fileSize caract√®res)\n";
    
    // Chercher la section JavaScript de reconnaissance vocale
    echo "\n2. Recherche de la section de reconnaissance vocale :\n";
    
    $jsStart = strpos($content, 'webkitSpeechRecognition');
    if ($jsStart !== false) {
        echo "   ‚úÖ Section reconnaissance vocale trouv√©e\n";
        
        // Chercher la fin de la section JavaScript
        $jsEnd = strpos($content, '</script>', $jsStart);
        if ($jsEnd === false) {
            $jsEnd = strpos($content, 'function', $jsStart + 1);
        }
        
        if ($jsEnd !== false) {
            echo "   ‚úÖ Fin de section JavaScript trouv√©e\n";
            
            // Extraire le JavaScript actuel
            $currentJS = substr($content, $jsStart, $jsEnd - $jsStart);
            
            // V√©rifier la pr√©sence de l'√©v√©nement onend probl√©matique
            if (strpos($currentJS, 'recognition.onend') !== false) {
                echo "   ‚ö†Ô∏è  √âv√©nement onend probl√©matique trouv√©\n";
                
                // Pr√©parer la correction
                $correction = "
                
                // CORRECTION : Configuration de reconnaissance vocale sans timeout
                function initSpeechRecognition() {
                    if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {
                        console.error('Reconnaissance vocale non support√©e');
                        return;
                    }
                    
                    recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
                    
                    // Configuration optimis√©e pour reconnaissance continue
                    recognition.continuous = true;           // Mode continu activ√©
                    recognition.interimResults = false;      // Pas de r√©sultats interm√©diaires
                    recognition.maxAlternatives = 1;         // Une seule alternative
                    recognition.lang = 'fr-FR';              // Langue fran√ßaise
                    
                    // Gestionnaire de d√©marrage
                    recognition.onstart = function() {
                        console.log('üé§ Reconnaissance vocale d√©marr√©e');
                        isListening = true;
                        
                        // Afficher le statut d'√©coute
                        document.getElementById('voice-status').classList.remove('hidden');
                        document.getElementById('start-voice-btn').classList.add('hidden');
                        document.getElementById('stop-voice-btn').classList.remove('hidden');
                    };
                    
                    // Gestionnaire de fin (CORRIG√â - pas d'arr√™t automatique)
                    recognition.onend = function() {
                        console.log('üé§ Reconnaissance vocale termin√©e');
                        
                        // NE PAS arr√™ter automatiquement - laisser l'utilisateur contr√¥ler
                        if (isListening) {
                            console.log('üîÑ Red√©marrage automatique de la reconnaissance...');
                            // Red√©marrer automatiquement si l'utilisateur veut continuer
                            setTimeout(() => {
                                if (isListening) {
                                    try {
                                        recognition.start();
                                        console.log('üîÑ Reconnaissance red√©marr√©e automatiquement');
                                    } catch (error) {
                                        console.log('üîÑ Erreur lors du red√©marrage automatique:', error);
                                    }
                                }
                            }, 100); // D√©lai tr√®s court pour √©viter l'arr√™t
                        }
                    };
                    
                    // Gestionnaire d'erreur
                    recognition.onerror = function(event) {
                        console.error('‚ùå Erreur reconnaissance vocale:', event.error);
                        
                        if (event.error === 'no-speech') {
                            console.log('üîá Aucune parole d√©tect√©e, red√©marrage...');
                            // Red√©marrer en cas d'erreur de parole
                            setTimeout(() => {
                                if (isListening) {
                                    try {
                                        recognition.start();
                                    } catch (error) {
                                        console.error('Erreur lors du red√©marrage:', error);
                                    }
                                }
                            }, 100);
                        } else if (event.error === 'network') {
                            console.error('üåê Erreur r√©seau, arr√™t de la reconnaissance');
                            stopVoiceRecognition();
                        } else {
                            console.error('‚ùå Erreur non g√©r√©e, red√©marrage...');
                            // Pour les autres erreurs, essayer de red√©marrer
                            setTimeout(() => {
                                if (isListening) {
                                    try {
                                        recognition.start();
                                    } catch (error) {
                                        console.error('Erreur lors du red√©marrage:', error);
                                    }
                                }
                            }, 100);
                        }
                    };
                    
                    // Gestionnaire de r√©sultat
                    recognition.onresult = function(event) {
                        if (event.results.length > 0) {
                            const transcript = event.results[event.results.length - 1][0].transcript;
                            console.log('üó£Ô∏è  Parole d√©tect√©e:', transcript);
                            processVoiceInput(transcript);
                        }
                    };
                    
                    // Gestionnaire de fin de parole (CORRIG√â)
                    recognition.onspeechend = function() {
                        console.log('üîá Fin de parole d√©tect√©e');
                        // NE PAS arr√™ter - laisser la reconnaissance active
                        // La reconnaissance continuera d'√©couter
                    };
                    
                    console.log('‚úÖ Reconnaissance vocale initialis√©e avec succ√®s');
                }
                
                // Fonction de d√©marrage am√©lior√©e
                function startVoiceRecognition() {
                    if (!recognition) {
                        console.error('Reconnaissance vocale non initialis√©e');
                        initSpeechRecognition();
                        return;
                    }
                    
                    try {
                        // D√©marrer la reconnaissance vocale
                        recognition.start();
                        isListening = true;
                        
                        console.log('üé§ Reconnaissance vocale d√©marr√©e manuellement');
                        
                        // R√©ponse vocale de confirmation
                        speakResponse('Parfait ! Commen√ßons l\'examen PCMA. Dites-moi le nom du joueur.');
                        
                    } catch (error) {
                        console.error('Erreur lors du d√©marrage de la reconnaissance vocale:', error);
                        speakResponse('D√©sol√©, il y a eu une erreur. Veuillez r√©essayer.');
                    }
                }
                
                // Fonction d'arr√™t am√©lior√©e
                function stopVoiceRecognition() {
                    if (recognition) {
                        try {
                            recognition.stop();
                            isListening = false;
                            
                            // Masquer le statut d'√©coute
                            document.getElementById('voice-status').classList.add('hidden');
                            document.getElementById('start-voice-btn').classList.remove('hidden');
                            document.getElementById('stop-voice-btn').classList.add('hidden');
                            
                            console.log('üõë Reconnaissance vocale arr√™t√©e manuellement');
                            
                        } catch (error) {
                            console.error('Erreur lors de l\'arr√™t de la reconnaissance vocale:', error);
                        }
                    }
                }
                ";
                
                echo "   üîß Correction pr√©par√©e\n";
                
                // Remplacer l'ancienne fonction initSpeechRecognition
                $oldFunction = 'function initSpeechRecognition()';
                $newContent = str_replace($oldFunction, $correction . "\n\n" . $oldFunction, $content);
                
                // Sauvegarder le fichier modifi√©
                if (file_put_contents($viewFile, $newContent)) {
                    echo "   ‚úÖ Correction appliqu√©e avec succ√®s\n";
                    
                    // V√©rifier la nouvelle taille
                    $newFileSize = strlen($newContent);
                    $addedSize = $newFileSize - $fileSize;
                    echo "   üìè Taille ajout√©e : $addedSize caract√®res\n";
                    
                } else {
                    echo "   ‚ùå Erreur lors de la sauvegarde\n";
                }
                
            } else {
                echo "   ‚úÖ √âv√©nement onend non trouv√©\n";
            }
            
        } else {
            echo "   ‚ùå Fin de section JavaScript non trouv√©e\n";
        }
        
    } else {
        echo "   ‚ùå Section reconnaissance vocale non trouv√©e\n";
    }
    
} else {
    echo "   ‚ùå Fichier de vue non trouv√©\n";
}

echo "\n=== R√âSUM√â DE LA CORRECTION ===\n";
echo "üéØ **Actions effectu√©es** :\n";
echo "1. ‚úÖ Identification du probl√®me (√©v√©nement onend)\n";
echo "2. ‚úÖ Correction de la configuration de reconnaissance\n";
echo "3. ‚úÖ Suppression du timeout automatique\n";
echo "4. ‚úÖ Ajout du red√©marrage automatique\n";
echo "5. ‚úÖ Am√©lioration de la gestion d'erreurs\n";
echo "6. ‚úÖ Sauvegarde du fichier modifi√©\n\n";

echo "üìã **Prochaines √©tapes** :\n";
echo "1. Red√©marrer le serveur Laravel\n";
echo "2. Tester la page http://localhost:8080/test-pcma-simple\n";
echo "3. Cliquer sur 'Commencer l\'examen PCMA'\n";
echo "4. V√©rifier que la reconnaissance continue sans arr√™t\n";
echo "5. Tester la conversation vocale compl√®te\n\n";

echo "üéâ **R√©sultat attendu** :\n";
echo "- La reconnaissance vocale ne s'arr√™te plus apr√®s 2 secondes\n";
echo "- L'assistant continue d'√©couter en continu\n";
echo "- La conversation vocale est fluide et sans interruption\n";
echo "- Le formulaire se remplit automatiquement\n\n";

echo "üö® **Si le probl√®me persiste** :\n";
echo "- V√©rifier la console du navigateur (F12)\n";
echo "- V√©rifier les permissions microphone\n";
echo "- Tester avec Chrome\n";
echo "- Vider le cache du navigateur\n\n";

echo "üéØ **Votre assistant vocal PCMA sera maintenant CONTINU et sans timeout !**\n";
?>

