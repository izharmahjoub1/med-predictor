<?php
/**
 * Test Voice Response - Test de la r√©ponse vocale de l'assistant
 */

echo "=== Test Voice Response - R√©ponse Vocale PCMA ===\n\n";

echo "üé§ **Test de la r√©ponse vocale de l'assistant**\n\n";

// Test de la route de test
$testUrl = 'http://localhost:8080/test-pcma-simple';
echo "1. Test de la page : $testUrl\n";

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $testUrl);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_TIMEOUT, 10);
curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
curl_setopt($ch, CURLOPT_MAXREDIRS, 5);

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($httpCode == 200) {
    echo "   ‚úÖ Page accessible (HTTP $httpCode)\n";
    
    // V√©rifier la pr√©sence de la fonction speakResponse
    echo "\n2. V√©rification de la r√©ponse vocale :\n";
    
    if (strpos($response, 'speakResponse') !== false) {
        echo "   ‚úÖ Fonction speakResponse trouv√©e\n";
    } else {
        echo "   ‚ùå Fonction speakResponse NON trouv√©e\n";
    }
    
    // V√©rifier la pr√©sence de SpeechSynthesis
    if (strpos($response, 'SpeechSynthesisUtterance') !== false) {
        echo "   ‚úÖ SpeechSynthesis trouv√©\n";
    } else {
        echo "   ‚ùå SpeechSynthesis NON trouv√©\n";
    }
    
    // V√©rifier la pr√©sence de la fonction processVoiceInput
    if (strpos($response, 'processVoiceInput') !== false) {
        echo "   ‚úÖ Fonction processVoiceInput trouv√©e\n";
    } else {
        echo "   ‚ùå Fonction processVoiceInput NON trouv√©e\n";
    }
    
    // V√©rifier la pr√©sence de la commande "commencer l'examen PCMA"
    if (strpos($response, 'commencer l\'examen PCMA') !== false) {
        echo "   ‚úÖ Commande 'commencer l\'examen PCMA' trouv√©e\n";
    } else {
        echo "   ‚ùå Commande 'commencer l\'examen PCMA' NON trouv√©e\n";
    }
    
    // V√©rifier la pr√©sence de la fonction startPCMA
    if (strpos($response, 'startPCMA') !== false) {
        echo "   ‚úÖ Fonction startPCMA trouv√©e\n";
    } else {
        echo "   ‚ùå Fonction startPCMA NON trouv√©e\n";
    }
    
    // V√©rifier la pr√©sence des instructions vocales
    echo "\n3. Instructions vocales disponibles :\n";
    
    $instructions = [
        'commencer l\'examen PCMA' => 'D√©marrer la collecte',
        'Il s\'appelle [nom]' => 'Nom du joueur',
        'Il a [√¢ge] ans' => '√Çge du joueur',
        'Il joue [position]' => 'Position du joueur',
        'oui' => 'Confirmer et soumettre',
        'non' => 'Corriger ou recommencer'
    ];
    
    foreach ($instructions as $instruction => $description) {
        if (strpos($response, $instruction) !== false) {
            echo "   ‚úÖ $description : TROUV√â\n";
        } else {
            echo "   ‚ùå $description : NON TROUV√â\n";
        }
    }
    
    // V√©rifier la pr√©sence du JavaScript de reconnaissance vocale
    echo "\n4. Reconnaissance vocale :\n";
    
    if (strpos($response, 'webkitSpeechRecognition') !== false) {
        echo "   ‚úÖ WebkitSpeechRecognition trouv√©\n";
    } else {
        echo "   ‚ùå WebkitSpeechRecognition NON trouv√©\n";
    }
    
    if (strpos($response, 'initSpeechRecognition') !== false) {
        echo "   ‚úÖ Fonction initSpeechRecognition trouv√©e\n";
    } else {
        echo "   ‚ùå Fonction initSpeechRecognition NON trouv√©e\n";
    }
    
    // Afficher un extrait du JavaScript pour v√©rifier la logique
    echo "\n5. Extrait du JavaScript vocal :\n";
    
    $jsStart = strpos($response, 'function processVoiceInput');
    if ($jsStart !== false) {
        $jsEnd = strpos($response, 'function', $jsStart + 1);
        if ($jsEnd === false) {
            $jsEnd = strpos($response, '</script>', $jsStart);
        }
        
        if ($jsEnd !== false) {
            $jsCode = substr($response, $jsStart, $jsEnd - $jsStart);
            echo "   üìù Code JavaScript vocal :\n";
            echo "      " . substr($jsCode, 0, 200) . "...\n";
        }
    }
    
} else {
    echo "   ‚ùå Page inaccessible (HTTP $httpCode)\n";
}

echo "\n=== R√©sum√© ===\n";
echo "üéØ **Objectif** : V√©rifier que l'assistant r√©pond vocalement\n";
echo "üîç **R√©sultat** : Si toutes les fonctions sont trouv√©es, l'assistant devrait r√©pondre\n";
echo "\nüìã **Comment tester la r√©ponse vocale** :\n";
echo "1. Aller sur http://localhost:8080/test-pcma-simple\n";
echo "2. Cliquer sur l'onglet 'üé§ Assistant Vocal'\n";
echo "3. Cliquer sur 'Commencer l\'examen PCMA'\n";
echo "4. Dire clairement : 'commencer l\'examen PCMA'\n";
echo "5. V√©rifier que l'assistant r√©pond vocalement\n";
echo "\nüé§ **R√©ponse attendue** :\n";
echo "- L'assistant devrait dire : 'Parfait ! Commen√ßons l\'examen PCMA. Dites-moi le nom du joueur.'\n";
echo "- Puis il devrait √©couter vos r√©ponses et les traiter\n";
echo "\nüö® **Si pas de r√©ponse vocale** :\n";
echo "- V√©rifier que le microphone est autoris√©\n";
echo "- V√©rifier la console du navigateur (F12)\n";
echo "- V√©rifier que le volume est activ√©\n";
echo "\nüéâ **Votre assistant vocal PCMA devrait maintenant r√©pondre !**\n";
?>

